# Set environment variables for dev or CI
export APP_ENV=${APP_ENV:-local}
export APP_PORT=${APP_PORT:-80}
export DB_PORT=${APP_PORT:-3306}
export DB_ROOT_PASS=${DB_ROOT_PASS:-secret}
export DB_NAME=${DB_NAME:-homestead}
export DB_USER=${DB_USER:-homestead}
export DB_PASS=${DB_PASS:-secret}

# Decide which docker-compose file to use
COMPOSE_FILE="dev"

# Disable pseudo-TTY allocation for CI (Jenkins)
TTY=""

if [ ! -z "$BUILD_NUMBER" ]; then
	COMPOSE_FILE="ci"
    TTY="-T"
fi

COMPOSE="docker-compose -f ./docker/docker-compose.$COMPOSE_FILE.yml"

# // because we are on windows
VARWWW="//var//www//html"

# If we pass any arguments...
if [ $# -gt 0 ]; then

    # If "art" is used, pass-thru to "artisan"
    # inside a new container
    if [ "$1" == "artisan" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w $VARWWW \
            app \
            php artisan "$@"

    # If "composer" is used, pass-thru to "composer"
    # inside a new container
    elif [ "$1" == "composer" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w $VARWWW \
            app \
            composer "$@"

    # If "test" is used, run unit tests,
    # pass-thru any extra arguments to php-unit
    elif [ "$1" == "test" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w $VARWWW \
            app \
            ./vendor/bin/phpunit "$@"

    elif [ "$1" == "t" ]; then
        shift 1
        $COMPOSE exec \
            app \
            sh -c "cd $VARWWW && ./vendor/bin/phpunit $@"

    # If "npm" is used, run npm
    # from our node container
    elif [ "$1" == "npm" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w $VARWWW \
            node \
            npm "$@"

    # If "gulp" is used, run gulp
    # from our node container
    elif [ "$1" == "gulp" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w $VARWWW \
            node \
            ./node_modules/.bin/gulp "$@"

    # If "log" is used, tail the laravel log file
    elif [ "$1" == "log" ]; then
        shift 1
        tail -f ./storage/logs/laravel.log | awk '\
            {matched=0}\
            /INFO:/    {matched=1; print "\033[0;37m" $$0 "\033[0m"}\
            /WARNING:/ {matched=1; print "\033[0;34m" $$0 "\033[0m"}\
            /ERROR:/   {matched=1; print "\033[0;31m" $$0 "\033[0m"}\
            /Next/     {matched=1; print "\033[0;31m" $$0 "\033[0m"}\
            /ALERT:/   {matched=1; print "\033[0;35m" $$0 "\033[0m"}\
            /Stack trace:/ {matched=1; print "\033[0;35m" $$0 "\033[0m"}\
            matched==0            {print "\033[0;33m" $$0 "\033[0m"}\
        '

    # Else, pass-thru args to docker-compose
    else
        $COMPOSE "$@"
    fi

else
    $COMPOSE ps
fi